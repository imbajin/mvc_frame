<?xml version="1.0" encoding="UTF-8"?>
<project name="project" basedir="." xmlns:mvn="antlib:org.apache.maven.artifact.ant">


    <property name="app.home" location="./application"/>
    <property name="maven.home" location="${app.home}/tools/maven"/>
    <property name="ant.home" location="${app.home}/tools/ant"/>
    <property name="app.dir.lib" location="${app.home}/web/WEB-INF/lib"/>
    <property name="app.dir.classes" location="${app.home}/web/WEB-INF/classes"/>
    <property name="app.dir.jsp_generated" location="${app.home}/tomcat/work/Catalina/localhost/app"/>
    <property name="app.dir.tmp" location="${app.home}/tmp"/>
    <property name="app.dir.logs" location="${app.home}/tomcat/logs"/>
    <property name="app.dir.monitor_logs" location="${app.home}/logs"/>

    <target name="mvn_libs" depends="mvn_init">
        <mvn:pom id="maven.project" file="pom.xml"/>
        <mvn:mvn mavenHome="${maven.home}" fork="true">
            <arg value="dependency:copy-dependencies"/>
        </mvn:mvn>
        <copy todir="${app.dir.lib}">
            <fileset dir="./target/dependency"/>
        </copy>
    </target>

    <!-- Ant调用Maven-->
    <target name="mvn_init" description="init mvn">
        <path id="maven-ant-tasks.classpath" path="${ant.home}/lib/maven-ant-tasks-2.1.3.jar" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
                 uri="antlib:org.apache.maven.artifact.ant"
                 classpathref="maven-ant-tasks.classpath" />
        <echo>init mvn finished..</echo>
        <mkdir dir="${app.dir.logs}"/>
        <mkdir dir="${app.dir.monitor_logs}"/>
    </target>

    <!--调用maven的defalut生命周期的install阶段-->
    <target name="mvn_clean" description="mvn clean" depends="mvn_init">
        <mvn:mvn mavenHome="${maven.home}" fork="true">
            <arg value="clean"/>
        </mvn:mvn>
    </target>

    <target name="mvn_compile" description="mvn compile" depends="mvn_init,mvn_clean">
        <mvn:mvn mavenHome="${maven.home}" fork="true">
            <arg value="compile"/>
            <arg value="-Dmaven.test.skip=true clean package"/>
        </mvn:mvn>
    </target>

    <target name="x_clean">
        <delete dir="${app.dir.lib}"/>
        <delete dir="${app.dir.classes}"/>
        <delete dir="${app.dir.jsp_generated}"/>
        <delete dir="${app.dir.tmp}"/>
        <delete dir="${app.dir.logs}"/>
        <delete dir="${app.dir.monitor_logs}"/>
        <mkdir dir="${app.dir.logs}"/>
        <mkdir dir="${app.dir.monitor_logs}"/>
    </target>

    <target name="compile" depends="mvn_compile,mvn_libs">
        <copy todir="${app.dir.classes}">
            <fileset dir="./target/classes"/>
        </copy>
    </target>

    <target name="reload_class" depends="mvn_compile">
        <delete dir="${app.dir.classes}"/>
        <delete dir="${app.dir.jsp_generated}"/>
        <mkdir dir="${app.dir.classes}"/>
        <copy todir="${app.dir.classes}">
            <fileset dir="./target/classes"/>
        </copy>
    </target>

    <target name="reload_libs" >
        <delete dir="${app.dir.lib}"/>
        <antcall target="mvn_libs"/>
    </target>

    <target name="reload_all" depends="reload_class,reload_libs">
    </target>

    <target name="build" depends="reload_all">
    </target>

    <target name="clean" depends="mvn_clean,x_clean">

    </target>

    <target name="release" depends="build">
        <zip destfile="./release.zip">
            <fileset dir="${app.home}">
                <exclude name="**/.svn" />
                <exclude name="tools/**" />
            </fileset>
        </zip>
    </target>

</project>